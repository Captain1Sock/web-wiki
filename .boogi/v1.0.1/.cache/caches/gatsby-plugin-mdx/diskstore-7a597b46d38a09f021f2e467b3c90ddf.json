{"expireTime":9007200862549899000,"key":"gatsby-plugin-mdx-entire-payload-0541f76b0a7383487fe968e2da34b8fc-","val":{"mdast":{"type":"root","children":[{"type":"heading","depth":2,"children":[{"type":"text","value":"Centering basics","position":{"start":{"line":2,"column":4,"offset":4},"end":{"line":2,"column":20,"offset":20},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":20,"offset":20},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Inline element -> ","position":{"start":{"line":4,"column":4,"offset":25},"end":{"line":4,"column":22,"offset":43},"indent":[]}},{"type":"inlineCode","value":"text-align: center;","position":{"start":{"line":4,"column":22,"offset":43},"end":{"line":4,"column":43,"offset":64},"indent":[]}}],"position":{"start":{"line":4,"column":4,"offset":25},"end":{"line":4,"column":43,"offset":64},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":22},"end":{"line":4,"column":43,"offset":64},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Block element -> ","position":{"start":{"line":5,"column":4,"offset":68},"end":{"line":5,"column":21,"offset":85},"indent":[]}},{"type":"inlineCode","value":"margin: 0 auto","position":{"start":{"line":5,"column":21,"offset":85},"end":{"line":5,"column":37,"offset":101},"indent":[]}}],"position":{"start":{"line":5,"column":4,"offset":68},"end":{"line":5,"column":37,"offset":101},"indent":[]}}],"position":{"start":{"line":5,"column":1,"offset":65},"end":{"line":5,"column":37,"offset":101},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":22},"end":{"line":5,"column":37,"offset":101},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"If you want to center something horizontally in CSS you can do it just by, using the text-align: center; (when working with inline elements) or margin: 0 auto; (when working with block element). But when it comes to center something both horizontally and vertically the job can be a little tricky to achieve.","position":{"start":{"line":7,"column":1,"offset":103},"end":{"line":7,"column":309,"offset":411},"indent":[]}}],"position":{"start":{"line":7,"column":1,"offset":103},"end":{"line":7,"column":309,"offset":411},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Absolute centering","position":{"start":{"line":10,"column":4,"offset":417},"end":{"line":10,"column":22,"offset":435},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":414},"end":{"line":10,"column":22,"offset":435},"indent":[]}},{"type":"jsx","value":"<iframe width=\"100%\" height=\"500\" scrolling=\"no\" frameborder=\"0\" id=\"player\" src=\"https://codepen.io/jscodelover/embed/preview/EGXZEM?default-tabs=css%2Cresult&amp;height=600&amp;host=https%3A%2F%2Fcodepen.io&amp;referrer=https%3A%2F%2Fmedium.com%2Ffront-end-weekly%2Fabsolute-centering-in-css-ea3a9d0ad72e&amp;slug-hash=EGXZEM\" allowfullscreen=\"true\"></iframe>","position":{"start":{"line":12,"column":1,"offset":437},"end":{"line":12,"column":362,"offset":798},"indent":[]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"Positioning & centering\"}","position":{"start":{"line":14,"column":1,"offset":800},"end":{"line":14,"column":64,"offset":863},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":14,"column":64,"offset":863}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Positioning & centering\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"section\", null, mdx(\"h2\", {\n    parentName: \"section\"\n  }, \"Centering basics\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Inline element -> \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"text-align: center;\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Block element -> \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"margin: 0 auto\"))), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"If you want to center something horizontally in CSS you can do it just by, using the text-align: center; (when working with inline elements) or margin: 0 auto; (when working with block element). But when it comes to center something both horizontally and vertically the job can be a little tricky to achieve.\")), mdx(\"section\", null, mdx(\"h2\", {\n    parentName: \"section\"\n  }, \"Absolute centering\"), mdx(\"iframe\", {\n    width: \"100%\",\n    height: \"500\",\n    scrolling: \"no\",\n    frameBorder: \"0\",\n    id: \"player\",\n    src: \"https://codepen.io/jscodelover/embed/preview/EGXZEM?default-tabs=css%2Cresult&height=600&host=https%3A%2F%2Fcodepen.io&referrer=https%3A%2F%2Fmedium.com%2Ffront-end-weekly%2Fabsolute-centering-in-css-ea3a9d0ad72e&slug-hash=EGXZEM\",\n    allowFullScreen: \"true\"\n  })));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"Positioning & centering\"\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <section><h2 parentName=\"section\">{`Centering basics`}</h2><ul parentName=\"section\">\n        <li parentName=\"ul\">{`Inline element -> `}<inlineCode parentName=\"li\">{`text-align: center;`}</inlineCode></li>\n        <li parentName=\"ul\">{`Block element -> `}<inlineCode parentName=\"li\">{`margin: 0 auto`}</inlineCode></li>\n      </ul><p parentName=\"section\">{`If you want to center something horizontally in CSS you can do it just by, using the text-align: center; (when working with inline elements) or margin: 0 auto; (when working with block element). But when it comes to center something both horizontally and vertically the job can be a little tricky to achieve.`}</p></section>\n    <section><h2 parentName=\"section\">{`Absolute centering`}</h2><iframe width=\"100%\" height=\"500\" scrolling=\"no\" frameborder=\"0\" id=\"player\" src=\"https://codepen.io/jscodelover/embed/preview/EGXZEM?default-tabs=css%2Cresult&amp;height=600&amp;host=https%3A%2F%2Fcodepen.io&amp;referrer=https%3A%2F%2Fmedium.com%2Ffront-end-weekly%2Fabsolute-centering-in-css-ea3a9d0ad72e&amp;slug-hash=EGXZEM\" allowfullscreen=\"true\"></iframe></section>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}