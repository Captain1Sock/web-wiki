{"expireTime":9007200864765240000,"key":"gatsby-plugin-mdx-entire-payload-8ad3fd4744c247eddec657e9437666df-","val":{"mdast":{"type":"root","children":[{"type":"heading","depth":1,"children":[{"type":"text","value":"Tips and tricks","position":{"start":{"line":2,"column":3,"offset":3},"end":{"line":2,"column":18,"offset":18},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":18,"offset":18},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"top/right/bottom/right -> inset","position":{"start":{"line":4,"column":4,"offset":23},"end":{"line":4,"column":35,"offset":54},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":20},"end":{"line":4,"column":35,"offset":54},"indent":[]}},{"type":"code","lang":"css","meta":null,"value":"  inset: 0; \n  /* ðŸ‘† is the same as `top: 0; right: 0; bottom: 0; left: 0;` */\n\n  inset: 1em 2em; \n  /* ðŸ‘† is the same as `top: 1em; right: 2em; bottom: 1em; left: 2em;` */\n\n  inset: 1em 2em 3em; \n  /* ðŸ‘† is the same as `top: 1em; right: 2em; bottom: 3em; left: 2em;` */\n  \n  inset: 1em 2em 3em 4em; \n  /* ðŸ‘† is the same as `top: 1em; right: 2em; bottom: 3em; left: 4em;` */","position":{"start":{"line":6,"column":1,"offset":56},"end":{"line":18,"column":4,"offset":441},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"Positioning\"}","position":{"start":{"line":20,"column":1,"offset":443},"end":{"line":20,"column":52,"offset":494},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":20,"column":52,"offset":494}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Positioning\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"section\", null, mdx(\"h1\", {\n    parentName: \"section\"\n  }, \"Tips and tricks\")), mdx(\"section\", null, mdx(\"h2\", {\n    parentName: \"section\"\n  }, \"top/right/bottom/right -> inset\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-css\"\n  }), \"  inset: 0; \\n  /* \\uD83D\\uDC46 is the same as `top: 0; right: 0; bottom: 0; left: 0;` */\\n\\n  inset: 1em 2em; \\n  /* \\uD83D\\uDC46 is the same as `top: 1em; right: 2em; bottom: 1em; left: 2em;` */\\n\\n  inset: 1em 2em 3em; \\n  /* \\uD83D\\uDC46 is the same as `top: 1em; right: 2em; bottom: 3em; left: 2em;` */\\n  \\n  inset: 1em 2em 3em 4em; \\n  /* \\uD83D\\uDC46 is the same as `top: 1em; right: 2em; bottom: 3em; left: 4em;` */\\n\"))));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"Positioning\"\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <section><h1 parentName=\"section\">{`Tips and tricks`}</h1></section>\n    <section><h2 parentName=\"section\">{`top/right/bottom/right -> inset`}</h2><pre parentName=\"section\"><code parentName=\"pre\" {...{\n          \"className\": \"language-css\"\n        }}>{`  inset: 0; \n  /* ðŸ‘† is the same as \\`top: 0; right: 0; bottom: 0; left: 0;\\` */\n\n  inset: 1em 2em; \n  /* ðŸ‘† is the same as \\`top: 1em; right: 2em; bottom: 1em; left: 2em;\\` */\n\n  inset: 1em 2em 3em; \n  /* ðŸ‘† is the same as \\`top: 1em; right: 2em; bottom: 3em; left: 2em;\\` */\n  \n  inset: 1em 2em 3em 4em; \n  /* ðŸ‘† is the same as \\`top: 1em; right: 2em; bottom: 3em; left: 4em;\\` */\n`}</code></pre></section>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}