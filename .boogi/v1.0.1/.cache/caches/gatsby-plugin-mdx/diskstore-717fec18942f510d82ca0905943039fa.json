{"expireTime":9007200864681610000,"key":"gatsby-plugin-mdx-entire-payload-b459002e815eb4aef11a65dc2b2a21b7-","val":{"mdast":{"type":"root","children":[{"type":"heading","depth":1,"children":[{"type":"text","value":"Admin","position":{"start":{"line":3,"column":3,"offset":4},"end":{"line":3,"column":8,"offset":9},"indent":[]}}],"position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":8,"offset":9},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Composer management bar (on composer pages)","position":{"start":{"line":5,"column":4,"offset":14},"end":{"line":5,"column":47,"offset":57},"indent":[]}}],"position":{"start":{"line":5,"column":1,"offset":11},"end":{"line":5,"column":47,"offset":57},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"- ","position":{"start":{"line":6,"column":1,"offset":58},"end":{"line":6,"column":4,"offset":61},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Composer Pages Overview (/admin/composers/pages)","position":{"start":{"line":8,"column":4,"offset":66},"end":{"line":8,"column":52,"offset":114},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":63},"end":{"line":8,"column":52,"offset":114},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"A list with all existing composer pages","position":{"start":{"line":9,"column":1,"offset":115},"end":{"line":9,"column":40,"offset":154},"indent":[]}}],"position":{"start":{"line":9,"column":1,"offset":115},"end":{"line":9,"column":40,"offset":154},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"ComposerOverview.js (the overview page)","position":{"start":{"line":10,"column":3,"offset":157},"end":{"line":10,"column":42,"offset":196},"indent":[]}}],"position":{"start":{"line":10,"column":3,"offset":157},"end":{"line":10,"column":42,"offset":196},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":155},"end":{"line":10,"column":42,"offset":196},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"SingleComposerPage.js  (A single composer page item in overview page)","position":{"start":{"line":11,"column":3,"offset":199},"end":{"line":11,"column":72,"offset":268},"indent":[]}}],"position":{"start":{"line":11,"column":3,"offset":199},"end":{"line":11,"column":72,"offset":268},"indent":[]}}],"position":{"start":{"line":11,"column":1,"offset":197},"end":{"line":11,"column":72,"offset":268},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":155},"end":{"line":11,"column":72,"offset":268},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"Composer Admin \"Manage Page\" Overview\nThe manage page modal","position":{"start":{"line":13,"column":1,"offset":270},"end":{"line":14,"column":22,"offset":329},"indent":[1]}}],"position":{"start":{"line":13,"column":1,"offset":270},"end":{"line":14,"column":22,"offset":329},"indent":[1]}},{"type":"code","lang":null,"meta":null,"value":"- ComposerManager.js -> wrapper\n\tâ—‹ NewContentBlock.js -> grid of available content blocks","position":{"start":{"line":15,"column":1,"offset":330},"end":{"line":16,"column":59,"offset":421},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"Add a new Composer Block option","position":{"start":{"line":18,"column":1,"offset":423},"end":{"line":18,"column":32,"offset":454},"indent":[]}}],"position":{"start":{"line":18,"column":1,"offset":423},"end":{"line":18,"column":32,"offset":454},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"- In api/updates/functions.js -> add new object in \"blockTypesToInsert\"\n- In Postman run the update function\n- Added to table \"block\" in db","position":{"start":{"line":19,"column":1,"offset":455},"end":{"line":21,"column":32,"offset":597},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Composer Manager block types","position":{"start":{"line":23,"column":1,"offset":599},"end":{"line":23,"column":29,"offset":627},"indent":[]}}],"position":{"start":{"line":23,"column":1,"offset":599},"end":{"line":23,"column":29,"offset":627},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"- Loaded from: ","position":{"start":{"line":24,"column":1,"offset":628},"end":{"line":24,"column":17,"offset":644},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Composer Manager blocks fields\nEvery block has:","position":{"start":{"line":27,"column":1,"offset":647},"end":{"line":28,"column":17,"offset":694},"indent":[1]}}],"position":{"start":{"line":27,"column":1,"offset":647},"end":{"line":28,"column":17,"offset":694},"indent":[1]}},{"type":"code","lang":null,"meta":null,"value":"- 5 toggles (automatically available in database)\n- 10 String fields (automatically available in database)\n- Block-id \n- Composer-id -> == ?page id?","position":{"start":{"line":29,"column":1,"offset":695},"end":{"line":32,"column":31,"offset":847},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Rendering a Composer page","position":{"start":{"line":35,"column":1,"offset":850},"end":{"line":35,"column":26,"offset":875},"indent":[]}}],"position":{"start":{"line":35,"column":1,"offset":850},"end":{"line":35,"column":26,"offset":875},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"1. ComposerPage.js: wrapper for admin, content\n2. Composer.js: show desktop or mobile view","position":{"start":{"line":36,"column":1,"offset":876},"end":{"line":37,"column":45,"offset":968},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"SingleComponserBlock.js: Render the specific block type","position":{"start":{"line":38,"column":1,"offset":969},"end":{"line":38,"column":56,"offset":1024},"indent":[]}}],"position":{"start":{"line":38,"column":1,"offset":969},"end":{"line":38,"column":56,"offset":1024},"indent":[]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"Composer\"}","position":{"start":{"line":40,"column":1,"offset":1026},"end":{"line":40,"column":49,"offset":1074},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":40,"column":49,"offset":1074}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Composer\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"section\", null, mdx(\"h1\", {\n    parentName: \"section\"\n  }, \"Admin\")), mdx(\"section\", null, mdx(\"h2\", {\n    parentName: \"section\"\n  }, \"Composer management bar (on composer pages)\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"- \\n\"))), mdx(\"section\", null, mdx(\"h2\", {\n    parentName: \"section\"\n  }, \"Composer Pages Overview (/admin/composers/pages)\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"A list with all existing composer pages\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"ComposerOverview.js (the overview page)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"SingleComposerPage.js  (A single composer page item in overview page)\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Composer Admin \\\"Manage Page\\\" Overview\\nThe manage page modal\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"- ComposerManager.js -> wrapper\\n    \\u25CB NewContentBlock.js -> grid of available content blocks\\n\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Add a new Composer Block option\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"- In api/updates/functions.js -> add new object in \\\"blockTypesToInsert\\\"\\n- In Postman run the update function\\n- Added to table \\\"block\\\" in db\\n\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Composer Manager block types\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"- Loaded from: \\n\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Composer Manager blocks fields\\nEvery block has:\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"- 5 toggles (automatically available in database)\\n- 10 String fields (automatically available in database)\\n- Block-id \\n- Composer-id -> == ?page id?\\n\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Rendering a Composer page\"), mdx(\"pre\", {\n    parentName: \"section\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"1. ComposerPage.js: wrapper for admin, content\\n2. Composer.js: show desktop or mobile view\\n\")), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"SingleComponserBlock.js: Render the specific block type\")));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"Composer\"\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <section><h1 parentName=\"section\">{`Admin`}</h1></section>\n    <section><h2 parentName=\"section\">{`Composer management bar (on composer pages)`}</h2><pre parentName=\"section\"><code parentName=\"pre\" {...{}}>{`- \n`}</code></pre></section>\n    <section><h2 parentName=\"section\">{`Composer Pages Overview (/admin/composers/pages)`}</h2><p parentName=\"section\">{`A list with all existing composer pages`}</p><ul parentName=\"section\">\n        <li parentName=\"ul\">{`ComposerOverview.js (the overview page)`}</li>\n        <li parentName=\"ul\">{`SingleComposerPage.js  (A single composer page item in overview page)`}</li>\n      </ul><p parentName=\"section\">{`Composer Admin \"Manage Page\" Overview\nThe manage page modal`}</p><pre parentName=\"section\"><code parentName=\"pre\" {...{}}>{`- ComposerManager.js -> wrapper\n    â—‹ NewContentBlock.js -> grid of available content blocks\n`}</code></pre><p parentName=\"section\">{`Add a new Composer Block option`}</p><pre parentName=\"section\"><code parentName=\"pre\" {...{}}>{`- In api/updates/functions.js -> add new object in \"blockTypesToInsert\"\n- In Postman run the update function\n- Added to table \"block\" in db\n`}</code></pre><p parentName=\"section\">{`Composer Manager block types`}</p><pre parentName=\"section\"><code parentName=\"pre\" {...{}}>{`- Loaded from: \n`}</code></pre><p parentName=\"section\">{`Composer Manager blocks fields\nEvery block has:`}</p><pre parentName=\"section\"><code parentName=\"pre\" {...{}}>{`- 5 toggles (automatically available in database)\n- 10 String fields (automatically available in database)\n- Block-id \n- Composer-id -> == ?page id?\n`}</code></pre><p parentName=\"section\">{`Rendering a Composer page`}</p><pre parentName=\"section\"><code parentName=\"pre\" {...{}}>{`1. ComposerPage.js: wrapper for admin, content\n2. Composer.js: show desktop or mobile view\n`}</code></pre><p parentName=\"section\">{`SingleComponserBlock.js: Render the specific block type`}</p></section>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}