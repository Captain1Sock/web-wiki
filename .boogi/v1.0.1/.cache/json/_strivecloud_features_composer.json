{"data":{"site":{"siteMetadata":{"title":"web-wiki","docsLocation":"http://localhost","docsLocationType":"github","editable":true}},"mdx":{"fields":{"id":"c952b35b-c5c3-5eac-8372-8d92f0ff6f1c","title":"Composer","slug":"/strivecloud/features/composer"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Composer\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"section\", null, mdx(\"h1\", {\n    parentName: \"section\"\n  }, \"Admin\")), mdx(\"section\", null, mdx(\"h2\", {\n    parentName: \"section\"\n  }, \"Composer management bar (on composer pages)\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"TODO: \"))), mdx(\"section\", null, mdx(\"h2\", {\n    parentName: \"section\"\n  }, \"Composer Pages Overview (/admin/composers/pages)\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"A list with all existing composer pages:\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"ComposerOverview.js (the overview page)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"SingleComposerPage.js  (A single composer page item in overview page)\"))), mdx(\"section\", null, mdx(\"h2\", {\n    parentName: \"section\"\n  }, \"Composer Admin \\\"Manage Page\\\" Overview\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"The manage page modal\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"ComposerManager.js -> wrapper\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"NewContentBlock.js -> grid of available content blocks\"))), mdx(\"section\", null, mdx(\"h2\", {\n    parentName: \"section\"\n  }, \"Composer Manager blocks fields\"), mdx(\"p\", {\n    parentName: \"section\"\n  }, \"Every block has:\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"5 toggles (automatically available in database)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"10 String fields (automatically available in database)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Block-id \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Composer-id -> == ?page id?\"))), mdx(\"section\", null, mdx(\"h1\", {\n    parentName: \"section\"\n  }, \"Add new composer type\")), mdx(\"section\", null, mdx(\"h2\", {\n    parentName: \"section\"\n  }, \"Composer option\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"In api/updates/functions.js -> add new object in \\\"blockTypesToInsert\\\"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"In Postman run the update function\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Added to table \\\"block\\\" in db\"))), mdx(\"section\", null, mdx(\"h2\", {\n    parentName: \"section\"\n  }, \"Composer option dialog\"), mdx(\"ul\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Create a new file \", \"[component]\", \"Fields.js with the block-specific options.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"AddBlockForm.js (on open new block)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"EditBlockForm.js (on edit existing block)\"))), mdx(\"section\", null, mdx(\"h1\", {\n    parentName: \"section\"\n  }, \"View\")), mdx(\"section\", null, mdx(\"h2\", {\n    parentName: \"section\"\n  }, \"Rendering a Composer page\"), mdx(\"ol\", {\n    parentName: \"section\"\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"ComposerPage.js: wrapper for admin, content\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Composer.js: show desktop or mobile view\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"SingleComponserBlock.js: Render the specific block type\"))));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#admin","title":"Admin","items":[{"url":"#composer-management-bar-on-composer-pages","title":"Composer management bar (on composer pages)"},{"url":"#composer-pages-overview-admincomposerspages","title":"Composer Pages Overview (/admin/composers/pages)"},{"url":"#composer-admin-manage-page-overview","title":"Composer Admin \"Manage Page\" Overview"},{"url":"#composer-manager-blocks-fields","title":"Composer Manager blocks fields"}]},{"url":"#add-new-composer-type","title":"Add new composer type","items":[{"url":"#composer-option","title":"Composer option"},{"url":"#composer-option-dialog","title":"Composer option dialog"}]},{"url":"#view","title":"View","items":[{"url":"#rendering-a-composer-page","title":"Rendering a Composer page"}]}]},"timeToRead":1,"parent":{"__typename":"File","relativePath":"strivecloud/features/composer.md","fields":null},"frontmatter":{"metaTitle":null,"showMetadata":null,"editable":null,"showPreviousNext":null,"showToc":null}},"gitBranch":{"name":"master"},"gitCommit":{"hash":"e1bd6ba5540835e64059de2043bb468bc3e7f0d8","date":"2020-12-12 10:02"}},"pageContext":{"id":"c952b35b-c5c3-5eac-8372-8d92f0ff6f1c"}}